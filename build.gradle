plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven { url 'https://jitpack.io' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'https://maven.wispforest.io' }
	maven {	url 'https://maven.terraformersmc.com/' }
	maven { url 'https://ladysnake.jfrog.io/artifactory/mods' }
	maven {
		url 'https://repo.sleeping.town'
		content {
			includeGroup 'com.unascribed'
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api

	// For debugging
	modLocalRuntime "maven.modrinth:emi:0.3.1+1.19"
	modLocalRuntime "maven.modrinth:modmenu:4.0.6"
	modLocalRuntime "io.wispforest:gadget:0.1.7"

	modLocalRuntime "maven.modrinth:aurorasdecorations:1.0.0-beta.11+1.19"
	modLocalRuntime "com.terraformersmc.terraform-api:terraform-wood-api-v1:4.1.0"

//	modLocalRuntime "maven.modrinth:piglib:1.1.1"
//	modLocalRuntime "maven.modrinth:alloy-forgery:2.0.17+1.19"
//	modLocalRuntime "maven.modrinth:mythicmetals:0.16.4+1.19.2"
//	modLocalRuntime "maven.modrinth:cloth-config:8.0.75+fabric"
//	modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.2"

	//	modLocalRuntime "maven.modrinth:purpeille:3.2.0+fabric-1.19"
//	modLocalRuntime "maven.modrinth:voidcrafting:1.7.2+fabric-1.19"
//	modLocalRuntime "maven.modrinth:cmods:1.3.1+fabric-1.19"

	modLocalRuntime "maven.modrinth:yttr:7.638+1.19.2"
	[
			'core', 'lockpick', 'gesundheit', 'fractal', 'tunnel', 'phantom', 'waypoint', 'weld',
			'sandman', 'crowbar', 'keygen', 'dessicant', 'deferral', 'machination', 'util', 'ripple',
			'recoil', 'mesh'
	].each { module ->
		modLocalRuntime include("com.unascribed:lib39-${module}:1.4.1")
	}


}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
